name: LighthouseCI

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  lighthouse:
    runs-on: ubuntu-22.04
    steps:
      - name: Set env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            commit_hash=$(echo "$(date +%s)" | sha1sum | cut -b -40)
            ancestor_hash=$(echo "$(date +%s)" | sha1sum | cut -b -40)
            iso_timestamp=$(date -Iseconds)
            human_readable_timestamp=$(date "+%d.%m.%Y, %H:%M")
          
            echo "Fake git commit hash set to ${commit_hash}"
            echo "Fake git ancestor hash set to ${ancestor_hash}"
            echo "ISO timestamp is ${iso_timestamp}"
          
            echo "LHCI_BUILD_CONTEXT__GIT_REMOTE=git@github.com:Ofadiman/lighthouse-reporting.git" >> $GITHUB_ENV
            echo "LHCI_BUILD_CONTEXT__GITHUB_REPO_SLUG=Ofadiman/lighthouse-reporting" >> $GITHUB_ENV
            echo "LHCI_BUILD_CONTEXT__CURRENT_HASH=${commit_hash}" >> $GITHUB_ENV
            echo "LHCI_BUILD_CONTEXT__ANCESTOR_HASH=${ancestor_hash}" >> $GITHUB_ENV
            echo "LHCI_BUILD_CONTEXT__COMMIT_TIME=${iso_timestamp}" >> $GITHUB_ENV
            echo "LHCI_BUILD_CONTEXT__CURRENT_BRANCH=main" >> $GITHUB_ENV
            echo "LHCI_BUILD_CONTEXT__COMMIT_MESSAGE=chore: workflow dispatch at ${human_readable_timestamp}" >> $GITHUB_ENV
            echo "LHCI_BUILD_CONTEXT__AUTHOR=github[bot]" >> $GITHUB_ENV
            echo "LHCI_BUILD_CONTEXT__AVATAR_URL=https://github.com/favicon.ico" >> $GITHUB_ENV
            echo "LHCI_BUILD_CONTEXT__EXTERNAL_BUILD_URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV
          fi
      - name: Checkout code
        uses: actions/checkout@v3.3.0
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7.29.1
      - name: Setup Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.15.0
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build project
        run: pnpm build
      - name: Collect lighthouse reports
        run: pnpm lhci collect
      - name: Assert on lighthouse reports
        run: pnpm lhci assert
      - name: Upload lighthouse reports to lhci server
        run: pnpm lhci upload --basicAuth.username=admin --basicAuth.password=password
